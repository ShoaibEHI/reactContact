{"version":3,"sources":["components/Header.jsx","components/create-contact.jsx","components/contact-card.jsx","pages/contact-list.jsx","App.js","index.js"],"names":["StyledH1","styled","h1","Header","CreateContact","props","handleChange","e","name","value","setState","formData","state","handleSubmit","updateContactList","isCreate","onClose","open","contactDetails","id","Modal","this","closeOnEscape","closeOnDimmerClick","size","Content","Form","Grid","Row","Column","width","Input","label","placeholder","firstName","onChange","fluid","lastName","contact","email","Actions","Button","basic","onClick","negative","type","positive","content","Component","defaultProps","StyledCard","Card","StyledAnchor","a","StyledPara","p","SytledIcon","Icon","ContactCard","useState","setOpen","Description","href","color","title","ContactList","contactData","list","setList","operation","newList","newId","length","push","foundIndex","findIndex","item","splice","container","floated","icon","labelPosition","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"wWAIA,IAAMA,EAAWC,IAAOC,GAAV,KAYCC,EARA,WACb,OACE,gCACE,kBAACH,EAAD,0B,8DCRAI,E,kDAEF,WAAYC,GAAQ,IAAD,gCACf,cAAMA,IAOVC,aAAe,SAACC,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,EAAKC,SACD,CACIC,SAAS,2BACA,EAAKC,MAAMD,UADZ,IACsB,CAACH,GAAOC,OAZ/B,EAgBnBI,aAAe,WACX,EAAKR,MAAMS,kBAAkB,EAAKF,MAAMD,SAAU,EAAKC,MAAMG,SAAW,SAAW,UACnF,EAAKV,MAAMW,WAhBX,EAAKJ,MAAQ,CACTK,MAAM,EACNF,WAAU,UAAC,EAAKV,MAAMa,sBAAZ,aAAC,EAA2BC,IACtCR,SAAS,eAAM,EAAKN,MAAMa,iBALf,E,qDAqBf,OACI,oCACI,kBAACE,EAAA,EAAD,CACIH,KAAMI,KAAKhB,MAAMY,KACjBK,eAAe,EACfC,oBAAoB,EACpBP,QAASK,KAAKhB,MAAMW,QACpBQ,KAAK,SAEL,kBAACJ,EAAA,EAAMjB,OAAP,KAAekB,KAAKT,MAAMG,SAAW,SAAW,OAAhD,YACA,kBAACK,EAAA,EAAMK,QAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,KACI,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAChB,kBAACJ,EAAA,EAAKK,MAAN,CACIC,MAAM,aACNC,YAAY,aACZzB,KAAK,YACLC,MAAOY,KAAKT,MAAMD,SAASuB,UAC3BC,SAAUd,KAAKf,aACf8B,OAAK,KAGb,kBAACT,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAChB,kBAACJ,EAAA,EAAKK,MAAN,CACIC,MAAM,YACNC,YAAY,YACZzB,KAAK,WACLC,MAAOY,KAAKT,MAAMD,SAAS0B,SAC3BF,SAAUd,KAAKf,aACf8B,OAAK,MAIjB,kBAACT,EAAA,EAAKC,IAAN,KACI,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAChB,kBAACJ,EAAA,EAAKK,MAAN,CACIC,MAAM,iBACNC,YAAY,iBACZzB,KAAK,UACLC,MAAOY,KAAKT,MAAMD,SAAS2B,QAC3BH,SAAUd,KAAKf,aACf8B,OAAK,KAGb,kBAACT,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAChB,kBAACJ,EAAA,EAAKK,MAAN,CACIC,MAAM,QACNC,YAAY,QACZzB,KAAK,QACLC,MAAOY,KAAKT,MAAMD,SAAS4B,MAC3BJ,SAAUd,KAAKf,aACf8B,OAAK,SAO7B,kBAAChB,EAAA,EAAMoB,QAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,QAAStB,KAAKhB,MAAMW,QAAS4B,UAAQ,GAAnD,UAGA,kBAACH,EAAA,EAAD,CACIC,OAAK,EACLG,KAAK,SACLF,QAAStB,KAAKR,aACdiC,UAAQ,EACRC,QAAS1B,KAAKT,MAAMG,SAAW,SAAW,kB,GA5F1CiC,aAqG5B5C,EAAc6C,aAAe,CACzB/B,eAAgB,CACZgB,UAAW,GACXG,SAAU,GACVE,MAAO,GACPD,QAAS,KAIFlC,Q,iXC5Gf,IAAM8C,EAAajD,YAAOkD,IAAPlD,CAAH,KAIVmD,EAAenD,IAAOoD,EAAV,KAIZC,EAAarD,IAAOsD,EAAV,KAGVC,EAAavD,YAAOwD,IAAPxD,CAAH,KAiCDyD,EA7BK,SAAC,GAA2C,IAAzCxC,EAAwC,EAAxCA,eAAgBJ,EAAwB,EAAxBA,kBAAwB,EACnC6C,oBAAS,GAD0B,mBACpD1C,EADoD,KAC9C2C,EAD8C,KAE3D,OACI,kBAACV,EAAD,KACI,kBAACC,EAAA,EAAK1B,QAAN,KACI,kBAAC0B,EAAA,EAAKhD,OAAN,KACKe,EAAegB,UADpB,IACgChB,EAAemB,UAE/C,kBAACc,EAAA,EAAKU,YAAN,KACI,kBAACT,EAAD,CAAcU,KAAM,eAAS5C,QAAT,IAASA,OAAT,EAASA,EAAgBoB,UACzC,kBAACmB,EAAA,EAAD,CAAMjD,KAAK,iBAAkBU,EAAeoB,SAEhD,6BACA,kBAACc,EAAD,CAAcU,KAAM,kBAAY5C,QAAZ,IAAYA,OAAZ,EAAYA,EAAgBqB,QAC5C,kBAACkB,EAAA,EAAD,CAAMjD,KAAK,SAAUU,EAAeqB,OAExC,6BAEA,kBAACe,EAAD,KACI,kBAACE,EAAD,CAAYhD,KAAK,OAAOuD,MAAM,QAAQC,MAAM,eAAerB,QAAS,kBAAMiB,GAAQ,MAClF,kBAACJ,EAAD,CAAYhD,KAAK,SAASuD,MAAM,MAAMC,MAAM,iBAAiBrB,QAAS,kBAAM7B,EAAkBI,EAAgB,gBAI1H,kBAAC,EAAD,CAAeA,eAAgBA,EAAgBD,KAAMA,EAAMD,QAAS,kBAAM4C,GAAQ,IAAQ9C,kBAAmBA,MCY1GmD,EAlDK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACbP,mBAASO,GADI,mBAC9BC,EAD8B,KACxBC,EADwB,OAEbT,oBAAS,GAFI,mBAE9B1C,EAF8B,KAExB2C,EAFwB,KAI/B9C,EAAoB,SAACwB,EAAS+B,GAChC,IAAMC,EAAO,YAAOH,GAEpB,GAAkB,WAAdE,EAAwB,CACxB,IAAME,EAAQD,EAAQA,EAAQE,OAAS,GAAGrD,GAAK,EAC/CmB,EAAQnB,GAAKoD,EACbD,EAAQG,KAAKnC,OACV,CACH,IAAMoC,EAAaJ,EAAQK,WAAU,SAACC,GAClC,OAAOA,EAAKzD,KAAOmB,EAAQnB,MAEb,WAAdkD,EACAC,EAAQO,OAAOH,EAAY,EAAGpC,GAE9BgC,EAAQO,OAAOH,EAAY,GAGnCN,EAAQE,IAEZ,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC3C,EAAA,EAAD,CAAMmD,WAAS,GACX,kBAACnD,EAAA,EAAKC,IAAN,KACI,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,IAChB,kBAACW,EAAA,EAAD,CAAQE,QAAS,WAAQiB,GAAQ,IAASmB,QAAQ,QAAQC,MAAI,EAACC,cAAc,OAAOvC,OAAK,EAACqB,MAAM,SAC5F,kBAACN,EAAA,EAAD,CAAMjD,KAAK,QADf,cAIA,kBAAC,EAAD,CAAeS,KAAMA,EAAMD,QAAS,kBAAM4C,GAAQ,IAAQ9C,kBAAmBA,MAGrF,kBAACa,EAAA,EAAKC,IAAN,KAEQuC,EAAKe,KAAI,SAAA5C,GAAO,OACZ,kBAACX,EAAA,EAAKE,OAAN,CAAaC,MAAO,EAAGqD,IAAK7C,EAAQnB,IAChC,kBAAC,EAAD,CAAaD,eAAgBoB,EAASxB,kBAAmBA,YCxCrFoD,G,OAAc,CAChB,CACI,GAAM,EACN,UAAa,OACb,SAAY,UACZ,QAAW,aACX,MAAS,+BAEb,CACI,GAAM,EACN,UAAa,QACb,SAAY,UACZ,QAAW,aACX,MAAS,gCAEb,CACI,GAAM,EACN,UAAa,UACb,SAAY,OACZ,QAAW,aACX,MAAS,4BAEb,CACI,GAAM,EACN,UAAa,UACb,SAAY,SACZ,QAAW,aACX,MAAS,gCAEb,CACI,GAAM,EACN,UAAa,QACb,SAAY,UACZ,QAAW,aACX,MAAS,gCAEb,CACI,GAAM,EACN,UAAa,UACb,SAAY,UACZ,QAAW,aACX,MAAS,kCAEb,CACI,GAAM,EACN,UAAa,QACb,SAAY,WACZ,QAAW,aACX,MAAS,kCAEb,CACI,GAAM,EACN,UAAa,UACb,SAAY,QACZ,QAAW,aACX,MAAS,8BAEb,CACI,GAAM,EACN,UAAa,OACb,SAAY,SACZ,QAAW,aACX,MAAS,6BAEb,CACI,GAAM,GACN,UAAa,SACb,SAAY,QACZ,QAAW,aACX,MAAS,+BAWAkB,E,uKANX,OACE,kBAAC,EAAD,CAAalB,YAAaA,Q,GAHdlB,aC1ElBqC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAgB,W","file":"static/js/main.0c6214e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledH1 = styled.h1`\r\n    font-size: 2rem;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <StyledH1>Contact Manager</StyledH1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Button, Modal, Grid } from 'semantic-ui-react';\r\nclass CreateContact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            isCreate: !this.props.contactDetails?.id,\r\n            formData: { ...this.props.contactDetails }\r\n        }\r\n    }\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState(\r\n            {\r\n                formData:\r\n                    { ...this.state.formData, [name]: value }\r\n            })\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        this.props.updateContactList(this.state.formData, this.state.isCreate ? \"create\" : \"update\");\r\n        this.props.onClose();\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    open={this.props.open}\r\n                    closeOnEscape={true}\r\n                    closeOnDimmerClick={true}\r\n                    onClose={this.props.onClose}\r\n                    size=\"small\"\r\n                >\r\n                    <Modal.Header>{this.state.isCreate ? \"Create\" : \"Edit\"} Contact</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Grid>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Form.Input\r\n                                            label=\"First Name\"\r\n                                            placeholder='First Name'\r\n                                            name='firstName'\r\n                                            value={this.state.formData.firstName}\r\n                                            onChange={this.handleChange}\r\n                                            fluid\r\n                                        />\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        <Form.Input\r\n                                            label=\"Last name\"\r\n                                            placeholder='Last Name'\r\n                                            name='lastName'\r\n                                            value={this.state.formData.lastName}\r\n                                            onChange={this.handleChange}\r\n                                            fluid\r\n                                        />\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Form.Input\r\n                                            label=\"Contact Number\"\r\n                                            placeholder='Contact Namber'\r\n                                            name='contact'\r\n                                            value={this.state.formData.contact}\r\n                                            onChange={this.handleChange}\r\n                                            fluid\r\n                                        />\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        <Form.Input\r\n                                            label=\"Email\"\r\n                                            placeholder='Email'\r\n                                            name='email'\r\n                                            value={this.state.formData.email}\r\n                                            onChange={this.handleChange}\r\n                                            fluid\r\n                                        />\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button basic onClick={this.props.onClose} negative>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            basic\r\n                            type=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                            positive\r\n                            content={this.state.isCreate ? \"Create\" : \"Update\"}\r\n                        />\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nCreateContact.defaultProps = {\r\n    contactDetails: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        contact: ''\r\n    }\r\n}\r\n\r\nexport default CreateContact\r\n","import React, { useState } from \"react\";\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport CreateContact from \"./create-contact\";\r\n\r\nconst StyledCard = styled(Card)`\r\n&&&{margin-top: 1rem;}\r\n`;\r\n\r\nconst StyledAnchor = styled.a`\r\noverflow-wrap: break-word;\r\n`;\r\n\r\nconst StyledPara = styled.p`\r\nfloat: right;\r\n`;\r\nconst SytledIcon = styled(Icon)`\r\ncursor: pointer;\r\n`;\r\n\r\nconst ContactCard = ({ contactDetails, updateContactList }) => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <StyledCard>\r\n            <Card.Content>\r\n                <Card.Header>\r\n                    {contactDetails.firstName} {contactDetails.lastName}\r\n                </Card.Header>\r\n                <Card.Description>\r\n                    <StyledAnchor href={\"tel:\" + contactDetails?.contact}>\r\n                        <Icon name=\"phone square\" />{contactDetails.contact}\r\n                    </StyledAnchor>\r\n                    <br />\r\n                    <StyledAnchor href={\"mailto:\" + contactDetails?.email}>\r\n                        <Icon name=\"mail\" />{contactDetails.email}\r\n                    </StyledAnchor>\r\n                    <br />\r\n\r\n                    <StyledPara>\r\n                        <SytledIcon name='edit' color=\"green\" title=\"Edit contact\" onClick={() => setOpen(true)} />\r\n                        <SytledIcon name='delete' color=\"red\" title=\"Delete contact\" onClick={() => updateContactList(contactDetails, \"delete\")} />\r\n                    </StyledPara>\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <CreateContact contactDetails={contactDetails} open={open} onClose={() => setOpen(false)} updateContactList={updateContactList} />\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default ContactCard;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport ContactCard from \"../components/contact-card\";\r\nimport { Grid, Button, Icon } from \"semantic-ui-react\";\r\nimport CreateContact from \"../components/create-contact\";\r\n\r\nconst ContactList = ({ contactData }) => {\r\n    const [list, setList] = useState(contactData);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const updateContactList = (contact, operation) => {\r\n        const newList = [...list];\r\n\r\n        if (operation === \"create\") {\r\n            const newId = newList[newList.length - 1].id + 1;\r\n            contact.id = newId;\r\n            newList.push(contact);\r\n        } else {\r\n            const foundIndex = newList.findIndex((item) => {\r\n                return item.id === contact.id;\r\n            });\r\n            if (operation === \"update\") {\r\n                newList.splice(foundIndex, 1, contact);\r\n            } else {\r\n                newList.splice(foundIndex, 1);\r\n            }\r\n        }\r\n        setList(newList);\r\n    }\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Grid container>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16}>\r\n                        <Button onClick={() => { setOpen(true) }} floated=\"right\" icon labelPosition='left' basic color=\"green\">\r\n                            <Icon name='add' />\r\n                            Create New\r\n                            </Button>\r\n                        <CreateContact open={open} onClose={() => setOpen(false)} updateContactList={updateContactList} />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    {\r\n                        list.map(contact => (\r\n                            <Grid.Column width={4} key={contact.id}>\r\n                                <ContactCard contactDetails={contact} updateContactList={updateContactList} />\r\n                            </Grid.Column>\r\n                        ))\r\n                    }\r\n                </Grid.Row>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from \"react\";\r\nimport ContactList from \"./pages/contact-list\";\r\n\r\nimport \"../node_modules/semantic-ui-css/semantic.css\";\r\n\r\n\r\nlet contactData = [\r\n  {\r\n      \"id\": 1,\r\n      \"firstName\": \"Macy\",\r\n      \"lastName\": \"Padilla\",\r\n      \"contact\": \"3927070561\",\r\n      \"email\": \"mpadilla730@allidapycam.net\"\r\n  },\r\n  {\r\n      \"id\": 2,\r\n      \"firstName\": \"Keith\",\r\n      \"lastName\": \"Daniels\",\r\n      \"contact\": \"3403479561\",\r\n      \"email\": \"kdaniels416@sleinadhtiek.net\"\r\n  },\r\n  {\r\n      \"id\": 3,\r\n      \"firstName\": \"Meaghan\",\r\n      \"lastName\": \"Pham\",\r\n      \"contact\": \"7426952066\",\r\n      \"email\": \"mpham917@mahpnahgaem.biz\"\r\n  },\r\n  {\r\n      \"id\": 4,\r\n      \"firstName\": \"Stephen\",\r\n      \"lastName\": \"Jordan\",\r\n      \"contact\": \"6946544732\",\r\n      \"email\": \"sjordan821@nadrojnehpets.net\"\r\n  },\r\n  {\r\n      \"id\": 5,\r\n      \"firstName\": \"Lewis\",\r\n      \"lastName\": \"Hopkins\",\r\n      \"contact\": \"3116707132\",\r\n      \"email\": \"lhopkins570@snikpohsiwel.net\"\r\n  },\r\n  {\r\n      \"id\": 6,\r\n      \"firstName\": \"Tanisha\",\r\n      \"lastName\": \"Leonard\",\r\n      \"contact\": \"6457687800\",\r\n      \"email\": \"tleonard607@dranoelahsinat.com\"\r\n  },\r\n  {\r\n      \"id\": 7,\r\n      \"firstName\": \"Tyler\",\r\n      \"lastName\": \"Gonzalez\",\r\n      \"contact\": \"2646003927\",\r\n      \"email\": \"tgonzalez982@zelaznogrelyt.org\"\r\n  },\r\n  {\r\n      \"id\": 8,\r\n      \"firstName\": \"Orlando\",\r\n      \"lastName\": \"Ortiz\",\r\n      \"contact\": \"7755616175\",\r\n      \"email\": \"oortiz169@zitroodnalro.biz\"\r\n  },\r\n  {\r\n      \"id\": 9,\r\n      \"firstName\": \"Dean\",\r\n      \"lastName\": \"Dawson\",\r\n      \"contact\": \"6102469376\",\r\n      \"email\": \"ddawson281@noswadnaed.org\"\r\n  },\r\n  {\r\n      \"id\": 10,\r\n      \"firstName\": \"Maggie\",\r\n      \"lastName\": \"Banks\",\r\n      \"contact\": \"4312959918\",\r\n      \"email\": \"mbanks199@sknabeiggam.biz\"\r\n  }\r\n];\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ContactList contactData={contactData} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render (<App />, document.getElementById ('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}